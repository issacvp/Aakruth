package com.aakruth.model;
// Generated Apr 16, 2017 12:21:33 AM by Hibernate Tools 5.2.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.springframework.data.jpa.datatables.mapping.DataTablesOutput;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonView;

/**
 * Transaction generated by hbm2java
 */
@Entity
@Table(name = "transaction", catalog = "aakruthdb")
public class Transaction implements java.io.Serializable {

	@JsonView(DataTablesOutput.View.class)
	private int tranId;
	@JsonView(DataTablesOutput.View.class)
	private String detail;
	@JsonView(DataTablesOutput.View.class)
	private char type;
	@JsonIgnore
	private Set<Credit> credits = new HashSet<Credit>(0);
	@JsonIgnore
	private Set<Debit> debits = new HashSet<Debit>(0);

	@Override
	public String toString() {
		return "Transaction [tranId=" + tranId + ", detail=" + detail + ", type=" + type + "]";
	}

	public Transaction() {
	}

	public Transaction(int tranId, String detail, char type) {
		this.tranId = tranId;
		this.detail = detail;
		this.type = type;
	}

	public Transaction(int tranId, String detail, char type, Set<Credit> credits, Set<Debit> debits) {
		this.tranId = tranId;
		this.detail = detail;
		this.type = type;
		this.credits = credits;
		this.debits = debits;
	}

	@Id

	@Column(name = "tran_Id", unique = true, nullable = false)
	public int getTranId() {
		return this.tranId;
	}

	public void setTranId(int tranId) {
		this.tranId = tranId;
	}

	@Column(name = "detail", nullable = false, length = 45)
	public String getDetail() {
		return this.detail;
	}

	public void setDetail(String detail) {
		this.detail = detail;
	}

	@Column(name = "type", nullable = false, length = 1)
	public char getType() {
		return this.type;
	}

	public void setType(char type) {
		this.type = type;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaction")
	public Set<Credit> getCredits() {
		return this.credits;
	}

	public void setCredits(Set<Credit> credits) {
		this.credits = credits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaction")
	public Set<Debit> getDebits() {
		return this.debits;
	}

	public void setDebits(Set<Debit> debits) {
		this.debits = debits;
	}

}
